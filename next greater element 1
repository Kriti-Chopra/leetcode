class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int ,int> hash;
        //maps number to the next greatest
        stack<int> mstack;
        
        if(nums2.size()>0) mstack.push(nums2[0]);
        for(int i=0;i<nums2.size();++i){
            if(!mstack.empty() && nums2[i]<mstack.top()) mstack.push(nums2[i]);
            else {
                while(!mstack.empty() && nums2[i]>mstack.top()){
                    hash[mstack.top()]=nums2[i];
                    mstack.pop();
                }
                mstack.push(nums2[i]);
            }
        }
        
        //now we have the hash just get the required values
        for(int i=0;i<nums1.size();++i){
            if(hash.find(nums1[i])==hash.end()) nums1[i]=-1;
            else nums1[i]=hash[nums1[i]];
        }
       
        return nums1;
    }
};
