/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void addNew(TreeNode* root,int v,int d,int curD){
        if(root==NULL) return;
        //adding the left and right values of the cur(prev to the one required to be changed)
        if(curD==d-1){
            //store the prev values and update the later
            TreeNode* l=root->left;
            TreeNode* r=root->right;
            
            // TreeNode* newNode=new TreeNode(v,l,r);
            root->left=new TreeNode(v);
            root->right=new TreeNode(v);
            root->left->left=l;
            root->right->right=r;
            return;
        }
        
        addNew(root->left,v,d,curD+1);
        addNew(root->right,v,d,curD+1);
    }
    
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(root==NULL) return root;
        
        if(d==1){
            TreeNode* newroot=new TreeNode(v,root,NULL);
            root=newroot;
            return root;
        }
        
        addNew(root,v,d,1);
        return root;
    }
};
