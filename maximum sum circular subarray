class Solution {
public:
    int maxSubArraySum(vector<int> a, int size) 
    { 
        int max_so_far = a[0]; 
        int curr_max = a[0]; 
  
        for (int i = 1; i < size; i++) 
        { 
            curr_max = max(a[i], curr_max+a[i]); 
            max_so_far = max(max_so_far, curr_max); 
        } 
        return max_so_far; 
    }
    
    int maxSubarraySumCircular(vector<int>& A) {
        int init=maxSubArraySum(A,A.size());
        //now change the array
        
        int sum=0;
        for(int i=0;i<A.size();++i){
            sum+=A[i];
            A[i]=(-1)*A[i];
        }
        
        int second=sum+maxSubArraySum(A,A.size());
        if(second==0) return init;
        return max(init,second);
    }
};
